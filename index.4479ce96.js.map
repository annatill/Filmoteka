{"mappings":"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","sources":["src/modules/refs.js","src/modules/button-my-library.js","src/modules/button-home.js","src/modules/starting-fetch/globalGenres.js","src/modules/starting-fetch/starting-fetch.js","src/modules/film-info/getFilmInfo.js","src/modules/film-info/renderFilmInfo.js","src/modules/film-info/closeFilmInfoModal.js","src/index.js","src/modules/film-info/openFilmInfoOnPosterClick.js"],"sourcesContent":["export const refs = {\n  buttonRefHome: document.querySelector('#button-header-home'),\n  buttonRefLibrary: document.querySelector('#button-header-library'),\n  divRefButtonLibrary: document.querySelector('.header-logo--position'),\n  divRefWatchedQueue: document.querySelector('.header-button__library'),\n  filmNameRef: document.querySelector('#film-name'),\n  filmVotesRef: document.querySelector('#votes'),\n  filmAverageVotesRef: document.querySelector('#average-votes'),\n  filmPopularityRef: document.querySelector('#popularity'),\n  filmOriginalTitleRef: document.querySelector('#original-title'),\n  filmGenreRef: document.querySelector('#genre'),\n  filmOverviewRef: document.querySelector('#film-overview'),\n  backdropRef: document.querySelector('#backdrop'),\n  filmInfoCloseBtnRef: document.querySelector('.js-close'),\n  filmImageRef: document.querySelector('#film-modal-image'),\n  filmAddToWatchedBtnRef: document.querySelector('#js-watched'),\n  filmAddToQueueBtnRef: document.querySelector('#js-queue'),\n  filmWatchTrailerBtnRef: document.querySelector('#js-trailer'),\n  galleryListRef: document.querySelector('#js-list'),\n  WATCHED: 'watched',\n  QUEUE: 'queue',\n};\n","import { refs } from './refs';\n\nrefs.buttonRefLibrary.addEventListener('click', onClickMyLibraryButton);\n\nexport function onClickMyLibraryButton() {\n  refs.divRefButtonLibrary.classList.add('header-logo__library--position');\n  refs.buttonRefLibrary.classList.add('header-nav--active');\n  refs.buttonRefHome.classList.remove('header-nav--active');\n  refs.divRefWatchedQueue.style.display = 'flex';\n}\n","import { refs } from './refs';\n\nrefs.buttonRefHome.addEventListener('click', onClickHomeButton);\n\nexport function onClickHomeButton() {\n  refs.divRefButtonLibrary.classList.remove('header-logo__library--position');\n  refs.buttonRefLibrary.classList.remove('header-nav--active');\n  refs.buttonRefHome.classList.toggle('header-nav--active');\n  refs.divRefWatchedQueue.style.display = 'none';\n}\n","const globalGenres = [\n  {\n    id: 28,\n    name: 'Action',\n  },\n  {\n    id: 12,\n    name: 'Adventure',\n  },\n  {\n    id: 16,\n    name: 'Animation',\n  },\n  {\n    id: 35,\n    name: 'Comedy',\n  },\n  {\n    id: 80,\n    name: 'Crime',\n  },\n  {\n    id: 99,\n    name: 'Documentary',\n  },\n  {\n    id: 18,\n    name: 'Drama',\n  },\n  {\n    id: 10751,\n    name: 'Family',\n  },\n  {\n    id: 14,\n    name: 'Fantasy',\n  },\n  {\n    id: 36,\n    name: 'History',\n  },\n  {\n    id: 27,\n    name: 'Horror',\n  },\n  {\n    id: 10402,\n    name: 'Music',\n  },\n  {\n    id: 9648,\n    name: 'Mystery',\n  },\n  {\n    id: 10749,\n    name: 'Romance',\n  },\n  {\n    id: 878,\n    name: 'Science Fiction',\n  },\n  {\n    id: 10770,\n    name: 'TV Movie',\n  },\n  {\n    id: 53,\n    name: 'Thriller',\n  },\n  {\n    id: 10752,\n    name: 'War',\n  },\n  {\n    id: 37,\n    name: 'Western',\n  },\n];\n\nexport { globalGenres };\n","import { globalGenres } from './globalGenres';\nimport { refs } from '../refs';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/';\nconst API_KEY = 'cb1bcc244723619ea7f2217b5a84ccd8';\nconst imageSize = 'w500';\n\nconst startingFetch = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data.results;\n};\n\nconst startingArr = [];\n\nconst getStartingArray = async () => {\n  try {\n    const result = await startingFetch();\n    startingArr.push(...result);\n    // console.log(startingArr);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\n\ngetStartingArray().then(() => {\n  renderStartingMoviesList(startingArr);\n});\n\nfunction renderStartingMoviesList(moviesArr) {\n  const markup = moviesArr\n    .map(movie => {\n      const {\n        title,\n        name,\n        poster_path,\n        id,\n        release_date,\n        first_air_date = '',\n        genre_ids = [],\n      } = movie;\n      let movieYear = release_date\n        ? getMovieYear(release_date)\n        : getMovieYear(first_air_date);\n      let movieName = title ? title : name;\n      const movieGenres = getMovieGenres(genre_ids, globalGenres);\n      const fullImageUrl = `${BASE_IMAGE_URL}${imageSize}${poster_path}`;\n      return `<li class=\"movie\" data-id=${id}>\n<img src=\"${fullImageUrl}\" width=\"395\"/>\n<p class=\"movie__title\">${movieName}</p>\n<p class=\"movie__genres\">${movieGenres}</p>\n<p class=\"movie__year\">${movieYear}</p>\n</li>\n`;\n    })\n    .join('');\n  refs.galleryListRef.insertAdjacentHTML('afterbegin', markup);\n}\n\nfunction getMovieYear(releasedate) {\n  return releasedate.slice(0, 4);\n}\n\nfunction getMovieGenres(genreIdsArray, genres) {\n  const genreNames = [];\n  genreIdsArray.forEach(id => {\n    if (genreNames.length >= 2) {\n      return;\n    }\n    const genre = genres.find(genreObj => genreObj.id === id);\n    if (genre) {\n      genreNames.push(genre.name);\n    }\n  });\n  return genreNames.join(', ');\n}\n","import { API_KEY, BASE_URL } from '../api_key';\n\nexport default async function getFilmInfo(id) {\n  return await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`).then(r => {\n    return r.json();\n  });\n}\n","import getFilmInfo from './getFilmInfo';\nimport { refs } from '../refs';\nconst imageLink = 'https://image.tmdb.org/t/p/w500';\nexport function renderFilmInfo(object) {\n  const {\n    original_title,\n    genres,\n    overview,\n    popularity,\n    vote_count,\n    vote_average,\n    poster_path,\n    id,\n  } = object;\n  console.log('object->', object);\n\n  const {\n    filmNameRef,\n    filmVotesRef,\n    filmAverageVotesRef,\n    filmPopularityRef,\n    filmOriginalTitleRef,\n    filmGenreRef,\n    filmOverviewRef,\n    filmImageRef,\n    filmAddToWatchedBtnRef,\n    filmAddToQueueBtnRef,\n    filmWatchTrailerBtnRef,\n  } = refs;\n\n  filmImageRef.src = `${imageLink}${poster_path}`;\n  filmImageRef.alt = original_title;\n\n  filmNameRef.textContent = original_title;\n\n  filmOriginalTitleRef.textContent = original_title;\n\n  filmOverviewRef.textContent = overview;\n\n  filmPopularityRef.textContent = popularity.toFixed(1);\n\n  filmVotesRef.textContent = vote_count;\n  filmAverageVotesRef.textContent = vote_average.toFixed(1);\n\n  const filmGenres = genres.map(genre => genre.name);\n  filmGenreRef.textContent = filmGenres.join(', ');\n\n  filmAddToWatchedBtnRef.dataset.id = id;\n  filmAddToQueueBtnRef.dataset.id = id;\n  filmWatchTrailerBtnRef.dataset.id = id;\n}\n","import { refs } from '../refs';\nconst { backdropRef, filmImageRef } = refs;\n\nexport function closeFilmInfoOnBackdropClick(evt) {\n  if (!evt.target.classList.contains('backdrop')) {\n    return;\n  }\n  evt.currentTarget.classList.add('is-hidden');\n\n  evt.currentTarget.removeEventListener('click', closeFilmInfoOnBackdropClick);\n}\nexport function closeFilmInfoOnEsc(evt) {\n  if (evt.code !== 'Escape') {\n    return;\n  }\n\n  backdropRef.classList.add('is-hidden');\n\n  document.removeEventListener('keydown', closeFilmInfoOnEsc);\n}\nexport function closeFilmInfoOnCloseBtnClick(evt) {\n  backdropRef.classList.add('is-hidden');\n\n  evt.currentTarget.removeEventListener('click', closeFilmInfoOnCloseBtnClick);\n}\n","import { refs } from './modules/refs';\nimport { onClickMyLibraryButton } from './modules/button-my-library';\nimport { onClickHomeButton } from './modules/button-home';\nimport './modules/starting-fetch/starting-fetch';\nimport { openFilmInfoOnPosterClick } from './modules/film-info/openFilmInfoOnPosterClick';\nrefs.galleryListRef.addEventListener('click', openFilmInfoOnPosterClick);\n","import { refs } from '../refs';\nimport getFilmInfo from './getFilmInfo';\nimport { renderFilmInfo } from './renderFilmInfo';\nimport {\n  closeFilmInfoOnBackdropClick,\n  closeFilmInfoOnEsc,\n  closeFilmInfoOnCloseBtnClick,\n} from './closeFilmInfoModal';\n\nexport function openFilmInfoOnPosterClick(evt) {\n  if (evt.target.nodeName !== 'LI' && evt.target.parentNode.nodeName !=='LI') {\n    // console.log(evt.target.parentNode.nodeName);\n    // console.log(evt.target.nodeName);\n    return;\n  }\n\n  // console.log(evt.target.parentNode.dataset.id);\n  const { backdropRef, filmInfoCloseBtnRef } = refs;\n  getFilmInfo(Number(evt.target.dataset.id ?? evt.target.parentNode.dataset.id))\n    .then(data => {\n      renderFilmInfo(data);\n    })\n    .then(() => {\n      refs.backdropRef.classList.remove('is-hidden');\n    });\n  document.addEventListener('keydown', closeFilmInfoOnEsc);\n  backdropRef.addEventListener('click', closeFilmInfoOnBackdropClick);\n  filmInfoCloseBtnRef.addEventListener('click', closeFilmInfoOnCloseBtnClick);\n}\n"],"names":["$8f4b9384d87b21fe$export$21666b427502ea6d","buttonRefHome","document","querySelector","buttonRefLibrary","divRefButtonLibrary","divRefWatchedQueue","filmNameRef","filmVotesRef","filmAverageVotesRef","filmPopularityRef","filmOriginalTitleRef","filmGenreRef","filmOverviewRef","backdropRef","filmInfoCloseBtnRef","filmImageRef","filmAddToWatchedBtnRef","filmAddToQueueBtnRef","filmWatchTrailerBtnRef","galleryListRef","WATCHED","QUEUE","addEventListener","classList","add","remove","style","display","toggle","$174fa8b2d9951c25$export$24896d221b9531c3","id","name","$8aa4fc25b404181b$var$startingArr","$8aa4fc25b404181b$var$getMovieYear","releasedate","slice","async","result","response","fetch","json","results","$8aa4fc25b404181b$var$startingFetch","push","error","console","$8aa4fc25b404181b$var$getStartingArray","then","moviesArr","markup","map","movie","title","poster_path","release_date","first_air_date","genre_ids","movieYear","movieName","movieGenres","genreIdsArray","genres","genreNames","forEach","length","genre","find","genreObj","join","$8aa4fc25b404181b$var$getMovieGenres","insertAdjacentHTML","$8aa4fc25b404181b$var$renderStartingMoviesList","$9a93d52d2bd2e522$export$2e2bcd8739ae039","r","$05c56dbe72b4ee1d$export$8b3fc46bac62103b","object","original_title","overview","popularity","vote_count","vote_average","log","src","alt","textContent","toFixed","filmGenres","dataset","$320d84bd6977025b$var$backdropRef","$320d84bd6977025b$var$filmImageRef","$320d84bd6977025b$export$197406b1d43f1b41","evt","target","contains","currentTarget","removeEventListener","$320d84bd6977025b$export$565a1fd89195df44","code","$320d84bd6977025b$export$644429ac2af3bdce","nodeName","parentNode","Number","data"],"version":3,"file":"index.4479ce96.js.map"}